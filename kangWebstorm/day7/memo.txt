21. 11. 16

1. 메모장 만들기

local storage ??
window.localstorage -> 여기 안에 저장할수 있는 데이터는 문자열밖에 없다.
ex) localStorage.setItem('mycat', 'Tom');
                            키     값
                            브라우저에 저장하는 데이터라고 생각하면 된다.

setItem, getItem, removeItem 이것만 알아도 무방하다.

// 키에 데이터 쓰기
localStorage.setItem("key", value);

// 키로 부터 데이터 읽기
localStorage.getItem("key");

// 키의 데이터 삭제
localStorage.removeItem("key");

// 모든 키의 데이터 삭제
localStorage.clear();

// 저장된 키/값 쌍의 개수
localStorage.length;





배열, 객체 리터럴,
리액트 ,
document.write()는 가급적 안쓰는게 좋다.


마크업랭귀지 -> 데이터 표현

json -> 사람들끼리 데이터를 정교하게? 쉽게? 편리하게? 교환하기위한 형식? 거의 표준이 되어버린??
     -> 문자열이다.
     -> 객체 리터럴의 문자스러운 표기 방식 -> "" 같은게 붙으면 json이라고 보면 된다. (gs25홈페이지 개발자페이지 network /
     -> 다른 언어들끼리 데이터를 교환하기 위한 구조화된 문자열 형식?
     -> JSON은 데이터 포맷일 뿐이며 어떠한 통신 방법도, 프로그래밍 문법도 아닌 단순히 '데이터를 표시하는 표현 방법' 일 뿐이다.
     -> 자바스크립트 객체 표기법과 아주 유사하다.




     객체 -> json(문자열)로 변환


     //localStorage -> 문자열로 저장되고 문자열로 끄낸다.

책이름
React.js, 스프링 부트, AWS로 배우는 웹 개발 101 SPA, REST API 기반 웹 애플리케이션 개발 웹 프로페셔널
모던 자바스크립트 Deep Dive 자바스크립트의 기본 개념과 동작 원리 위키북스 프로그래밍 & 프랙티스 시리즈 26




///////////////////// 클로저 (필수 개념 무조건 알아야한다) //////////////////////////

클로저(closure)는 내부함수와 밀접한 관계를 가지고 있는 주제다.
내부함수는 외부함수의 지역변수에 접근 할 수 있는데 외부함수의 실행이 끝나서
외부함수가 소멸된 이후에도 내부함수가 외부함수의 변수에 접근 할 수 있다.
이러한 메커니즘을 클로저라고 한다.

클로저란 내부함수가 외부함수의 지역변수에 접근 할 수 있고,
외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지 소멸되지 않는 특성을 의미한다.


클로저 -> 함수의 상태 유지 -> 마치 java의 클래스-인스턴스 처럼(돼지저금통)
암묵적인 참조
감춰져있는 참조
var let 차이 알기 (중요하다)
////////////////////////////////////////////////////////////////////////////////

픽셀이나 퍼센트 단위는 요즘에는 잘 안쓴다.


css3 새로운 단위 Viewport => 뷰포트
vh(height), vw(width) => 두가지 단위(비율)

<style>태그에서 * 의 기능 -> 모든 곳에서 이 값?? 을 줘라 패딩이든 마진이든


<table> 안에 <tr> <th> 태그가 있다.

자바스크립트 구조 분해 할당
const { a,b,c } = obj  아래 3줄 코드를 이렇게 편하게 쓸 수 있다.

const a = obj.a
const b = obj.b
const c = obj.c

이벤트 버블링, 캡처링 jquery 에서 버블링 캡처링 처리가 잘되어있다.
이벤트 전파(버블링) <-> 이벤트 캡처링
이벤트 걸때는(addEventListener) 마지막에 false 무조건 걸자.

이벤트는 정보다, 객체다.
이벤트는 전파가 된다.

전파를 막는다. propaganda

이벤트 관련 메소드  정말정말 중요하다.
stopPropagation() -> 내가 현재 처리한 이벤트의 전파를 막겠다(금지, 차단)는 메소드.
preventDefault()  -> 태그의 기본 동작을 막는 메소드. (예를들어 a태그의 기본 동작인 이동을 막는다던지)
<a>태그의 기본 동작은 이동이다

====> 이벤트 처리시에 dom에 x => 동적(이벤트 x)으로 생성
target => 실제로 이벤트가 발생한 element (태그) 확인하기 위함


리액트, vue.js


js 모듈패턴 -> 내부에 상태를 조작하는 함수들을 반환.
보물창고와 보물창고를 관리하는 문지기
-> 보물창고를 직접적으로 볼수는 없고 문지기를 통해서만 봐야한다.


면접관 질문시 대답방식 (40초정도가? 적당)
정의(definition)/사용 예시(이럴때 썻다)/느낌
=>ex)클로저, 이벤트(버블링/캡처링)




velog에 공부한것들 정리하기.