
브라우저 -> 하나의 프로그램

데이터는 문자열로 이루어짐.
데이터는 구조를 가진다

데이터와 데이터를 구분 하는 법-> 토큰이라 한다.

마크업랭귀지 -> 태그 같은 것들


html -> 브라우저와 데이터를 주고받는걸 표준으로 만들어서 주고받기위한 것. (스펙)

크롬 브라우저 js 해석기 이름 -> v8

v8을 따로 때어내서 실행하기 위한 것 -> node.js

렌더링 -> 화면에 출력하기 위한 것

브라우저는 document를 받는다
docment는 문자열로 이루어져 있다.

html -> 문자열일 뿐이다.
html 문서 -> 처리

  데이터 -> 구조 -> html -> document object model => DOM


웹과 앱 -> 목적이 다르다.

웹 : 정보를 뿌리기 위한것. 그물망처럼 연결시키기 위한 것.

html 에서 <script></script> 태그 -> v8엔진으로 처리하는것처럼 따로 떼어내서 처리한다.


window와 document 같은 것들. -> API라고 부른다.
js에서의 window와 document는 브라우저에서 기본으로 제공하는것
window -> 창(브라우저화면) 제어 역할
document -> 문서(html)의 내용물을 커스터마이징하는것.
통신 ->

window + document + 통신 => html5

옛날 브라우저는 문서만 보여주는 역할을 했다.


html5 는 완전히 새로운 시대다. 단순 태그가 추가된 것이 아닌.


플랫폼 ???
말그대로 기차역 승강장을 의미
무언가를 하고싶은데 필수적으로 필요한것

html5는 플랫폼을 지향한다.

웹 2.0의 시대를 연것 -> 구글지도

서버사이드 프로그래밍 : jsp asp php -> 서버 렌더링

웹디자이너 -> 디자인 시안 -> html 코드 -> 서버사이드 프로그래밍 : jsp asp php -> 서버 렌더링 -> 브라우저



브라우저에서 js로 하는일

DOM처리 => CRUD -> HTML태그 -> 메모리상에 올라가는것


이벤트 처리 -> 클릭 / 드래그 등등
window제어
html5기능 이용



<script></script> 단위로 처리
<script></script> 태그는 아래쪽에 써주는게 좋다 (dom 처리 하는데 좋다) -> but 이벤트 처리를 하면 위치는 상관없다.

브라우저 js -> window
             document -> dom(html->메모리) 을 핸들링하기 위에 있는 것.

dom트리 데이터구조 (꼬리에 꼬리를 무는 것과 비슷하다)

html(데이터)
  -> js(동작)
  -> css(스타일)




스크립트 태그마다 따로따로 처리된다.

보고있는 창 하나당 메모리가 할당된다. (window.)
다른 창으로 넘어가면 기존 메모리에 할당된 게 사라지고 새로 할당된다.

ex) .html에서 <script>  function doA(){}  </script>  를 만들면 window에 붙는다.

.html에서 함수나 변수를 선언하면 window에 달라붙는다.

변수같은 경우 var를 써야 window에 달라붙는다(메모리 낭비된다)

var는 위험할 수 있으므로 let이나 const만 쓰는게 좋다.


js로 dom 핸들링을 많이한다.


스크립트 태그는 마지막에 써야한다.
이유는?

화면에 뿌려지는게 느려진다.
html을 다 읽고 js로 핸들링을 하기 위해서.

이벤트 -> dom 처리가 끝나면 로직을 수행하라.
DOMContentLoaded -> 스크립트 태그가 위에 있으면 이걸 수행해서
                    dom을 다 읽고 이거를 수행
====> 콜백 함수다.(이벤트 처리 함수)

js파일을 변경하고 나서 ->
개발자 도구에서 network -> .js 파일 메뉴에서 브라우저 캐쉬 클리어 하는 습관을 들이자.


js 이벤트 처리
콜백 함수 등록
이벤트 리스너
이벤트 처리기

이벤트는 데이터, 정보다.
이벤트는 객체다.

이벤트 루프


id , class => 식별키(태그를 찾기 위해서)


//////////////////// 이벤트 처리 코드 중에서 가장 표준 코드다 ///////////////////////////

// 위 방법이나 아래방법을 쓰면 된다.
// btn.addEventListener("click", function() {
//
// })

문서 객체 모델(DOM, Document Object Model)은 XML이나 HTML 문서에 접근하기 위한 일종의 인터페이스
HTML DOM은 HTML 문서를 조작하고 접근하는 표준화된 방법을 정의